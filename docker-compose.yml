version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console/UI port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # PostgreSQL Database Service
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gph-api
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  gph-api:
    image: valereplantevin/gph-api:0.2
    container_name: gph-api
    ports:
      - "8000:8000"
    environment:
      - DB_URL=postgresql://postgres:postgres@postgres:5432/gph-api
      - S3_ENDPOINT_URL=http://localhost:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_REGION_NAME=us-east-1
      - S3_BUCKET_NAME=gph-builds
      - JWT_SECRET_KEY=db051cd30450faefe4942ef275588230e65a384363898c9e9e993c75f867df2e
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_SECONDS=3600
      - P4USER = gph_p4_user
      - P4PORT = ssl:perforce:1666
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

# Define named volumes for data persistence
volumes:
  minio_data:
  postgres_data: